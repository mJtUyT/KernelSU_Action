name: Build Android Kernel for Android 15

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 检出代码库
      - name: Checkout repository
        uses: actions/checkout@v2

      # 2. 设置依赖项
      - name: Set up dependencies
        run: |
          sudo apt update
          sudo apt install -y gcc g++ make git perl bc bison flex libssl-dev libncurses5-dev libncursesw5-dev libelf-dev

      # 3. 检出谷歌 GKI 内核源码
      - name: Checkout Google GKI Kernel
        run: |
          git clone --depth=1 https://android.googlesource.com/kernel/common.git kernel

      # 4. 检出适用于 Android 15 的 GKI 分支
      - name: Checkout GKI for Android 15
        run: |
          cd kernel
          git checkout android-15.0.0_r1  # Android 15 分支

      # 5. 修改内核版本号和构建配置
      - name: Modify Kernel Version and Config
        run: |
          cd kernel
          
          # 使用 sed 删除 -dirty 后缀并设置自定义版本号
          sed -i 's/\(6\.1\.75-android-8-\)[a-z0-9]*-dirty/\1SUSFS-mJtUyT/' ./common/scripts/setlocalversion
          
          # 使用 perl 修改内核构建信息中的版本号
          perl -pi -e 's{UTS_VERSION="\$\(echo \$UTS_VERSION \$CONFIG_FLAGS \$TIMESTAMP \| cut -b -\$UTS_LEN\)"}{UTS_VERSION="5.15.149-android15-8-SUSFS-mJtUyT"}' ./common/scripts/mkcompile_h
          
          # 清理旧的构建文件
          make clean

      # 6. 设置 Android 构建环境
      - name: Set up Android build environment
        run: |
          cd kernel
          source build/envsetup.sh
          lunch aosp_arm64-userdebug  # 这里假设构建的是通用的 ARM64 目标设备

      # 7. 编译内核
      - name: Build the Kernel
        run: |
          cd kernel
          make -j$(nproc)  # 根据可用的 CPU 核心数调整并行构建

      # 8. 构建 AnyKernel3 补丁包
      - name: Build AnyKernel3 Patch
        run: |
          cd kernel
          git clone https://github.com/ozkarlis/AnyKernel3.git
          cd AnyKernel3
          cp -r ../out/target/product/generic/kernel/* .  # 根据实际构建输出目录调整路径
          # 使用 AnyKernel3 脚本创建补丁包
          ./tools/ak3_patcher.sh -v 5.15.149-android15-8-SUSFS-mJtUyT -k "5.15.149" -a "android15" -p "8" -d "SUSFS-mJtUyT"
        
      # 9. 上传 AnyKernel3 补丁包（可选）
      - name: Upload AnyKernel3 zip
        uses: actions/upload-artifact@v3
        with:
          name: AnyKernel3-Patch
          path: kernel/AnyKernel3/*.zip

      # 10. 最后的状态消息
      - name: Final Message
        run: echo "内核构建和 AnyKernel3 补丁包创建完成！"
